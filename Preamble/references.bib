
@article{song_analysis_2021,
	title = {Analysis on Heterogeneous Computing},
	volume = {2031},
	issn = {1742-6588, 1742-6596},
	url = {https://iopscience.iop.org/article/10.1088/1742-6596/2031/1/012049},
	doi = {10.1088/1742-6596/2031/1/012049},
	abstract = {In the Internet industry, with the popularization of informatization and the rapid increase in data volume, people have new requirements for storage space. At the same time, computer applications such as artificial intelligence and big data have rapidly increased demand for computing power and diversified application scenarios. Heterogeneous computing has become the focus of research. This article introduces the choice of architecture for heterogeneous computing systems and programming languages for heterogeneous computing. Some typical technologies of heterogeneous computing are illustrated, including data communication and access, task division and mapping between processors. However, this also brings difficulties. The challenges facing hybrid parallel computing, such as programming difficulties, poor portability of the algorithm, complex data access, unbalanced resource load. Studies have shown that there are many ways to improve the status quo and solve problems, including the development of a unified programming method, a good programming model and the integration of storage and computing, intelligent task allocation, as well as the development of better packaging technologies. Finally, the application prospects and broad market prospects of heterogeneous computing systems are prospected. In the next ten years, due to the various advantages of heterogeneous computing systems, innovation in more fields will be stimulated and heterogeneous computing systems will shine in the {AI} artificial intelligence fields such as smart self-service equipment, smart robots, and smart driving cars. Moreover, this emerging technology will bring new industries and new jobs, thereby driving economic prosperity and social development and even benefiting the entire human society.},
	pages = {012049},
	number = {1},
	journaltitle = {Journal of Physics: Conference Series},
	shortjournal = {J. Phys.: Conf. Ser.},
	author = {Song, Changxu},
	urldate = {2021-11-30},
	date = {2021-09-01},
	langid = {english},
	file = {Song - 2021 - Analysis on Heterogeneous Computing.pdf:C\:\\Users\\Jiahu\\Zotero\\storage\\CGXX9JN2\\Song - 2021 - Analysis on Heterogeneous Computing.pdf:application/pdf},
}

@article{zahran_heterogeneous_2017,
	title = {Heterogeneous computing: here to stay},
	volume = {60},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/3024918},
	doi = {10.1145/3024918},
	shorttitle = {Heterogeneous computing},
	abstract = {Hardware and software perspectives.},
	pages = {42--45},
	number = {3},
	journaltitle = {Communications of the {ACM}},
	shortjournal = {Commun. {ACM}},
	author = {Zahran, Mohamed},
	urldate = {2021-11-30},
	date = {2017-02-21},
	langid = {english},
	file = {Zahran - 2017 - Heterogeneous computing here to stay.pdf:C\:\\Users\\Jiahu\\Zotero\\storage\\WAU9WN8L\\Zahran - 2017 - Heterogeneous computing here to stay.pdf:application/pdf},
}

@article{brodtkorb_state---art_2010,
	title = {State-of-the-art in Heterogeneous Computing},
	volume = {18},
	issn = {1058-9244, 1875-919X},
	url = {http://www.hindawi.com/journals/sp/2010/540159/},
	doi = {10.1155/2010/540159},
	abstract = {Node level heterogeneous architectures have become attractive during the last decade for several reasons: compared to traditional symmetric {CPUs}, they offer high peak performance and are energy and/or cost efﬁcient. With the increase of ﬁne-grained parallelism in high-performance computing, as well as the introduction of parallelism in workstations, there is an acute need for a good overview and understanding of these architectures. We give an overview of the state-of-the-art in heterogeneous computing, focusing on three commonly found architectures: the Cell Broadband Engine Architecture, graphics processing units ({GPUs}), and ﬁeld programmable gate arrays ({FPGAs}). We present a review of hardware, available software tools, and an overview of state-of-the-art techniques and algorithms. Furthermore, we present a qualitative and quantitative comparison of the architectures, and give our view on the future of heterogeneous computing.},
	pages = {1--33},
	number = {1},
	journaltitle = {Scientific Programming},
	shortjournal = {Scientific Programming},
	author = {Brodtkorb, Andre R. and Dyken, Christopher and Hagen, Trond R. and Hjelmervik, Jon M. and Storaasli, Olaf O.},
	urldate = {2021-11-30},
	date = {2010},
	langid = {english},
	file = {Brodtkorb et al. - 2010 - State-of-the-art in Heterogeneous Computing.pdf:C\:\\Users\\Jiahu\\Zotero\\storage\\XT6YRQUQ\\Brodtkorb et al. - 2010 - State-of-the-art in Heterogeneous Computing.pdf:application/pdf},
}

@article{mittal_survey_2015,
	title = {A Survey of {CPU}-{GPU} Heterogeneous Computing Techniques},
	volume = {47},
	issn = {0360-0300, 1557-7341},
	url = {https://dl.acm.org/doi/10.1145/2788396},
	doi = {10.1145/2788396},
	abstract = {As both {CPUs} and {GPUs} become employed in a wide range of applications, it has been acknowledged that both of these Processing Units ({PUs}) have their unique features and strengths and hence, {CPU}-{GPU} collaboration is inevitable to achieve high-performance computing. This has motivated a significant amount of research on heterogeneous computing techniques, along with the design of {CPU}-{GPU} fused chips and petascale heterogeneous supercomputers. In this article, we survey Heterogeneous Computing Techniques ({HCTs}) such as workload partitioning that enable utilizing both {CPUs} and {GPUs} to improve performance and/or energy efficiency. We review heterogeneous computing approaches at runtime, algorithm, programming, compiler, and application levels. Further, we review both discrete and fused {CPU}-{GPU} systems and discuss benchmark suites designed for evaluating Heterogeneous Computing Systems ({HCSs}). We believe that this article will provide insights into the workings and scope of applications of {HCTs} to researchers and motivate them to further harness the computational powers of {CPUs} and {GPUs} to achieve the goal of exascale performance.},
	pages = {1--35},
	number = {4},
	journaltitle = {{ACM} Computing Surveys},
	shortjournal = {{ACM} Comput. Surv.},
	author = {Mittal, Sparsh and Vetter, Jeffrey S.},
	urldate = {2021-11-30},
	date = {2015-07-21},
	langid = {english},
	file = {Mittal and Vetter - 2015 - A Survey of CPU-GPU Heterogeneous Computing Techni.pdf:C\:\\Users\\Jiahu\\Zotero\\storage\\SGKMSAV9\\Mittal and Vetter - 2015 - A Survey of CPU-GPU Heterogeneous Computing Techni.pdf:application/pdf},
}

@online{noauthor_zookeeper_nodate,
	title = {{ZooKeeper} - Watches},
	url = {https://bowenli86.github.io/2016/07/11/distributed system/zookeeper/ZooKeeper-Watches/index.html},
	abstract = {All of the read operations in {ZooKeeper} - {getData}(), {getChildren}(), and exists() - have the option of setting a watch as a side effect. Here is {ZooKeeper}’s definition of a watch:   a watch event is on},
	titleaddon = {Bowen's blog},
	urldate = {2022-03-12},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\9EQZH9PF\\ZooKeeper - Watches.html:text/html},
}

@report{postel_transmission_1981,
	title = {Transmission Control Protocol},
	url = {https://www.rfc-editor.org/info/rfc0793},
	pages = {RFC0793},
	number = {{RFC}0793},
	institution = {{RFC} Editor},
	author = {Postel, J.},
	urldate = {2022-05-07},
	date = {1981-09},
	langid = {english},
	doi = {10.17487/rfc0793},
}

@misc{oasis_mqtt_nodate,
	title = {{MQTT} Version 5.0},
	url = {https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html},
	abstract = {{MQTT} is a Client Server publish/subscribe messaging transport protocol. It is light weight, open, simple, and designed to be easy to implement. These characteristics make it ideal for use in many situations, including constrained environments such as for communication in Machine to Machine (M2M) and Internet of Things ({IoT}) contexts where a small code footprint is required and/or network bandwidth is at a premium.

The protocol runs over {TCP}/{IP}, or over other network protocols that provide ordered, lossless, bi-directional connections. Its features include:

·         Use of the publish/subscribe message pattern which provides one-to-many message distribution and decoupling of applications.

·         A messaging transport that is agnostic to the content of the payload.

·         Three qualities of service for message delivery:

o    "At most once", where messages are delivered according to the best efforts of the operating environment. Message loss can occur. This level could be used, for example, with ambient sensor data where it does not matter if an individual reading is lost as the next one will be published soon after.

o    "At least once", where messages are assured to arrive but duplicates can occur.

o    "Exactly once", where messages are assured to arrive exactly once. This level could be used, for example, with billing systems where duplicate or lost messages could lead to incorrect charges being applied.

·         A small transport overhead and protocol exchanges minimized to reduce network traffic.

·         A mechanism to notify interested parties when an abnormal disconnection occurs.},
	author = {{OASIS}},
	urldate = {2022-05-07},
}

@online{reed_poweredby_2019,
	title = {{PoweredBy} - Apache {ZooKeeper} - Apache Software Foundation},
	url = {https://cwiki.apache.org/confluence/display/ZOOKEEPER/PoweredBy},
	author = {Reed, Benjamin and Kalmár, Norbert},
	urldate = {2022-05-09},
	date = {2019-09-16},
	file = {PoweredBy - Apache ZooKeeper - Apache Software Foundation:C\:\\Users\\Jiahu\\Zotero\\storage\\X6XT546R\\PoweredBy.html:text/html},
}

@online{apache_software_foundation_projectdescription_nodate,
	title = {{ProjectDescription} - Apache {ZooKeeper} - Apache Software Foundation},
	url = {https://cwiki.apache.org/confluence/display/ZOOKEEPER/ProjectDescription},
	author = {{Apache Software Foundation}},
	urldate = {2022-05-14},
}

@online{apache_software_foundation_zookeeper_nodate,
	title = {{ZooKeeper}},
	url = {https://zookeeper.apache.org/doc/r3.3.3/zookeeperOver.html},
	author = {{Apache Software Foundation}},
	urldate = {2022-05-14},
	file = {ZooKeeper:C\:\\Users\\Jiahu\\Zotero\\storage\\YN7DRTUT\\zookeeperOver.html:text/html},
}

@online{yuan_getting_nodate,
	title = {Getting to know {MQTT}},
	url = {https://developer.ibm.com/articles/iot-mqtt-why-good-for-iot/},
	abstract = {This article provides a technical introduction to the {MQTT} protocol. You learn what is {MQTT}, what makes {MQTT} suitable for {IoT} applications, and how to get started with developing apps that use {MQTT}.},
	titleaddon = {{IBM} Developer},
	author = {Yuan, Michael},
	urldate = {2022-05-14},
}

@online{dhaduk_component-driven_2021,
	title = {Component-driven development: Best practices to build scalable frontend.},
	url = {https://www.simform.com/blog/component-based-development/},
	shorttitle = {Component-driven development},
	abstract = {Learn all about component-based development and what are the best practices to follow to experience all its advantages to build a scalable frontend.},
	titleaddon = {Insights on Latest Technologies - Simform Blog},
	author = {Dhaduk, Hiren},
	urldate = {2022-05-17},
	date = {2021-05-18},
	langid = {american},
}

@software{hoppscotch_hoppscotchhoppscotch_2022,
	title = {hoppscotch/hoppscotch},
	rights = {{MIT}},
	url = {https://github.com/hoppscotch/hoppscotch},
	abstract = {👽 Open source {API} development ecosystem - https://hoppscotch.io},
	publisher = {Hoppscotch},
	author = {{Hoppscotch}},
	urldate = {2022-05-20},
	date = {2022-05-20},
	note = {original-date: 2019-08-21T13:15:24Z},
	keywords = {api, api-client, api-rest, api-testing, developer-tools, graphql, http, http-client, nuxt, nuxtjs, pwa, rest, rest-api, spa, testing, testing-tools, tools, vue, vuejs, websocket},
}

@online{postman_postman_nodate,
	title = {Postman {API} Platform},
	url = {https://www.postman.com/},
	abstract = {Postman is an {API} platform for building and using {APIs}. Postman simplifies each step of the {API} lifecycle and streamlines collaboration so you can create better {APIs}—faster.},
	titleaddon = {Postman},
	author = {{Postman}},
	urldate = {2022-05-19},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\PCHRD42Q\\www.postman.com.html:text/html},
}

@online{curl_curl_nodate,
	title = {curl},
	url = {https://curl.se/},
	author = {{cURL}},
	urldate = {2022-05-19},
	file = {curl:C\:\\Users\\Jiahu\\Zotero\\storage\\RJ7K2BMI\\curl.se.html:text/html},
}

@online{cloud_native_computing_foundation_operating_nodate,
	title = {Operating etcd clusters for Kubernetes},
	url = {https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/},
	abstract = {etcd is a consistent and highly-available key value store used as Kubernetes' backing store for all cluster data.
If your Kubernetes cluster uses etcd as its backing store, make sure you have a back up plan for those data.
You can find in-depth information about etcd in the official documentation.
Before you begin You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.},
	titleaddon = {Kubernetes},
	author = {{Cloud Native Computing Foundation}},
	urldate = {2022-05-17},
	langid = {english},
	note = {Section: docs},
}

@online{netflix_technology_blog_netflix_2017,
	title = {Netflix Shares Cloud Load Balancing And Failover Tool: Eureka!},
	url = {https://netflixtechblog.com/netflix-shares-cloud-load-balancing-and-failover-tool-eureka-c10647ef95e5},
	shorttitle = {Netflix Shares Cloud Load Balancing And Failover Tool},
	abstract = {a service registry that is a critical component of the Netflix infrastructure in the {AWS} cloud},
	titleaddon = {Medium},
	author = {{Netflix Technology Blog}},
	urldate = {2022-05-17},
	date = {2017-04-18},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\GZ3YMWF9\\netflix-shares-cloud-load-balancing-and-failover-tool-eureka-c10647ef95e5.html:text/html},
}

@online{nginx_inc_service_nodate,
	title = {Service Discovery in a Microservices Architecture - {NGINX}},
	url = {https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/},
	author = {Nginx, Inc.},
	urldate = {2022-05-17},
}

@online{camp_guide_nodate,
	title = {Guide to Pub/Sub in Golang {\textbar} Ably Blog: Data in Motion},
	url = {https://ably.com/blog/pubsub-golang},
	shorttitle = {Guide to Pub/Sub in Golang {\textbar} Ably Blog},
	abstract = {Pub/Sub is an extremely powerful pattern that compliments Go’s inherent distributed bias.},
	titleaddon = {The Ably Blog},
	author = {Camp, Thomas},
	urldate = {2022-05-22},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\JL4AXV7L\\pubsub-golang.html:text/html},
}

@online{eclipse_eclipse_2018,
	title = {Eclipse Mosquitto},
	url = {https://mosquitto.org/},
	abstract = {Eclipse Mosquitto is an open source ({EPL}/{EDL} licensed) message broker that
		implements the {MQTT} protocol versions 5.0, 3.1.1 and 3.1. Mosquitto
		is lightweight and is suitable for use on all devices},
	titleaddon = {Eclipse Mosquitto},
	author = {{Eclipse}},
	urldate = {2022-05-22},
	date = {2018-01-08},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\VA3EG2YZ\\mosquitto.org.html:text/html},
}

@online{mdn_content-type_nodate,
	title = {Content-Type - {HTTP} {\textbar} {MDN}},
	url = {https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type},
	abstract = {The Content-Type representation header is used to indicate the original media type of the resource (prior to any content encoding applied for sending).},
	author = {{MDN}},
	urldate = {2022-05-21},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\UPMTTKI6\\Content-Type.html:text/html},
}

@online{academic_list_nodate,
	title = {List of {CPU} architectures},
	url = {https://en-academic.com/dic.nsf/enwiki/11834151},
	abstract = {The following is a list of notable {CPU} architectures. Contents 1 Introduction/Overview 2 Embedded {CPU} architectures 3 Microcomputer {CPU} architectures 4 Worksta},
	titleaddon = {Academic Dictionaries and Encyclopedias},
	author = {Academic},
	urldate = {2022-05-21},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\CXN9APZP\\11834151.html:text/html},
}

@online{capgemini_engineering_how_nodate,
	title = {How Kubernetes benefits {IoT} edge},
	url = {https://capgemini-engineering.com/us/en/insight/how-kubernetes-benefits-iot-edge/},
	abstract = {The Internet of Things ({IoT}) can be defined as a system of interrelated computing devices with unique identifiers and the ability to transfer data over a network without human-to-human or human-to-computer interaction.},
	titleaddon = {Capgemini Engineering United States},
	author = {{Capgemini Engineering}},
	urldate = {2022-05-23},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\35IG24D5\\how-kubernetes-benefits-iot-edge.html:text/html},
}

@online{facebook_flux_nodate,
	title = {Flux {\textbar} Flux},
	url = {https://facebook.github.io/flux/},
	abstract = {Application architecture for building user interfaces},
	author = {Facebook},
	urldate = {2022-05-26},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\4QDYS87F\\flux.html:text/html},
}

@online{burton_flux_2018,
	title = {The Flux pattern in {VueJS}, building a simple store},
	url = {https://bignerdranch.com/blog/the-flux-pattern-in-vuejs-building-a-simple-store/},
	abstract = {Check out our blog post The Flux pattern in {VueJS}, building a simple store from Big Nerd Ranch. Learn more and read it now!},
	titleaddon = {Big Nerd Ranch},
	author = {Burton, Scott},
	urldate = {2022-05-26},
	date = {2018-09-24},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\3VV8F8PI\\the-flux-pattern-in-vuejs-building-a-simple-store.html:text/html},
}

@online{noauthor_heterogeneous_nodate,
	title = {Heterogeneous Computing Farm {TFG} Thesis},
	url = {https://www.overleaf.com/project/61a3b3e490b208269bf4de9c#},
	abstract = {An online {LaTeX} editor that’s easy to use. No installation, real-time collaboration, version control, hundreds of {LaTeX} templates, and more.},
	urldate = {2022-05-26},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\JS5VKGUQ\\61a3b3e490b208269bf4de9c.html:text/html},
}

@online{karl-bridge-microsoft_process_nodate,
	title = {Process Status {API} - Win32 apps},
	url = {https://docs.microsoft.com/en-us/windows/win32/psapi/process-status-helper},
	abstract = {Obtain information about processes, modules (executable files or {DLLs}), and device drivers. Collect memory usage data. Take snapshots of the amount of memory physically mapped to the process context.},
	author = {Karl-Bridge-Microsoft},
	urldate = {2022-05-27},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\6ICWAZNM\\process-status-helper.html:text/html},
}

@online{karl-bridge-microsoft_performance_nodate,
	title = {Performance Counters - Win32 apps},
	url = {https://docs.microsoft.com/en-us/windows/win32/perfctrs/performance-counters-portal},
	abstract = {Use Windows Performance Counters to collect system data such as {CPU}, memory, and disk usage to identify performance bottlenecks and fine tune performance.},
	author = {Karl-Bridge-Microsoft},
	urldate = {2022-05-27},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\Z6QA2QY3\\performance-counters-portal.html:text/html},
}

@online{vuejs_what_nodate,
	title = {What is Vuex? {\textbar} Vuex},
	url = {https://vuex.vuejs.org/},
	shorttitle = {What is Vuex?},
	abstract = {Centralized State Management for Vue.js},
	author = {{VueJS}},
	urldate = {2022-05-26},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\ARTUXQRE\\vuex.vuejs.org.html:text/html},
}

@inproceedings{rajaee_iot_2017,
	location = {San Francisco, {CA}},
	title = {{IoT}, Resource Constrained Devices, Security},
	url = {https://www.researchgate.net/publication/316490787_IoT_Resource_Constrained_Devices_Security#:~:text=The%20majority%20devices%20that%20will,handle%20extra%20functionalities%20and%20protocols.},
	abstract = {The majority devices that will constitute the {IoT} are Constrained Devices (also known as sensors, smart objects, or smart devices) with limited {CPU}, memory, and power resources. These devices have no idea about the security and they don't have enough resources to handle extra functionalities and protocols. Security protocols which are too heavy to run directly from the Class-0 device are delegated to the gateway. The gateway acts as an intermediary with ample resources to support these security measures and secure data before sending it over the internet. Data sent from the {IoT} device will be sent to the gateway using protocols such as {CoAP} and {HTTP} and sent across the internet using {HTTPS} ({HTTP} over {TLS}) to the web server. In This solution I've focused on the security of data being communicated between highly constrained {IoT} devices and the internet. A Class-0 device does not have sufficient resources to support the transport layer security mechanism needed to securely transport data directly to across the internet. This solution attempts to build on existing research by addressing gaps in existing solutions. Using data object encryption and a security gateway between the device and the internet a more layered security solution has been developed. The security gateway provides a means for sending data from the device across the internet using {HTTPS} ({TLS}). An extra layer of protection is applied to data by encrypting its using {AES} before it leaves the {IoT} device. Using symmetric encryption confidentiality of data can be secured between device and the intended server destination. Sensitive data being passed to the gateway cannot be read by the gateway and is forwarded securely using {TLS} to the final destination in its encrypted state. Using data link layer security ({WPA}2 {AES} 265-bit) the connection between the device and gateway is further secured against any unauthorized entities try to intercept a transmission. These additional layers of security have an acceptable level of impact on device resources.},
	eventtitle = {{RSA} 2017},
	author = {Rajaee, Omid},
	date = {2017-02},
}

@online{neeru360_software_2021,
	title = {Software Testing Techniques},
	url = {https://www.geeksforgeeks.org/software-testing-techniques/},
	abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
	titleaddon = {{GeeksforGeeks}},
	author = {{Neeru360}},
	urldate = {2022-05-30},
	date = {2021-02-22},
	langid = {english},
	note = {Section: Software Engineering},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\HTWHUSNI\\software-testing-techniques.html:text/html},
}

@online{stark_why_2020,
	title = {Why Data Visualization Is Important},
	url = {https://analytiks.co/importance-of-data-visualization/},
	abstract = {What is Data Visualization? With so much information being collected through data analysis in the business world today, we must […]},
	titleaddon = {Analytiks},
	author = {Stark, Mathieu},
	urldate = {2022-05-30},
	date = {2020-06-10},
	langid = {american},
}

@online{the_linux_foundation_control_nodate,
	title = {Control Group v2 — The Linux Kernel documentation},
	url = {https://www.kernel.org/doc/html/latest/admin-guide/cgroup-v2.html},
	author = {The Linux Foundation},
	urldate = {2022-05-30},
	file = {Control Group v2 — The Linux Kernel documentation:C\:\\Users\\Jiahu\\Zotero\\storage\\FEMS9JHJ\\cgroup-v2.html:text/html},
}

@online{check_point_what_nodate,
	title = {What is Sandboxing? - Check Point Software},
	url = {https://www.checkpoint.com/cyber-hub/threat-prevention/what-is-sandboxing/},
	author = {{Check Point}},
	urldate = {2022-05-30},
	file = {What is Sandboxing? - Check Point Software:C\:\\Users\\Jiahu\\Zotero\\storage\\Z966AGGB\\what-is-sandboxing.html:text/html},
}

@online{amazon_inc_leader_nodate,
	title = {Leader election in distributed systems},
	url = {https://aws.amazon.com/builders-library/leader-election-in-distributed-systems/},
	abstract = {Improving efficiency, reducing coordination, and simplifying architectures by using Leader election.},
	titleaddon = {Amazon Web Services, Inc.},
	author = {{Amazon, Inc.}},
	urldate = {2022-05-30},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\VR8B3YAJ\\leader-election-in-distributed-systems.html:text/html},
}

@online{scrum_guides_scrum_nodate,
	title = {Scrum Guide {\textbar} Scrum Guides},
	url = {https://scrumguides.org/scrum-guide.html},
	author = {Scrum Guides},
	urldate = {2022-05-30},
	file = {Scrum Guide | Scrum Guides:C\:\\Users\\Jiahu\\Zotero\\storage\\VNB9UFFH\\scrum-guide.html:text/html},
}

@online{atlassian_sprints_nodate,
	title = {Sprints},
	url = {https://www.atlassian.com/agile/scrum/sprints},
	abstract = {A sprint is a short, time boxed period when a scrum team works to complete a set amount of work.},
	titleaddon = {Atlassian},
	author = {Atlassian},
	urldate = {2022-05-30},
	langid = {english},
}

@online{agile_manifesto_manifesto_nodate,
	title = {Manifesto for Agile Software Development},
	url = {https://agilemanifesto.org/},
	author = {{Agile Manifesto}},
	urldate = {2022-05-30},
}

@online{microsoft_corporation_what_nodate,
	title = {What Is Cloud Computing? A Beginner’s Guide {\textbar} Microsoft Azure},
	url = {https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/},
	shorttitle = {What Is Cloud Computing?},
	abstract = {What is cloud computing and how does cloud computing work? Learn the benefits of cloud computing. Discover how you use cloud computing services every day online.},
	author = {{Microsoft Corporation}},
	urldate = {2022-05-30},
	langid = {english},
}

@online{cloud_native_computing_foundation_kubernetes_nodate,
	title = {Kubernetes},
	url = {https://kubernetes.io/},
	author = {Cloud Native Computing Foundation},
	urldate = {2022-05-31},
	file = {Kubernetes:C\:\\Users\\Jiahu\\Zotero\\storage\\JGIHJPDR\\kubernetes.io.html:text/html},
}

@online{docker_swarm_2022,
	title = {Swarm mode overview},
	url = {https://docs.docker.com/engine/swarm/},
	abstract = {Docker Engine swarm mode overview},
	titleaddon = {Docker Documentation},
	author = {{Docker}},
	urldate = {2022-05-31},
	date = {2022-05-31},
	langid = {english},
}

@online{amazon_inc_fully_nodate,
	title = {Fully Managed Container Solution – Amazon Elastic Container Service (Amazon {ECS}) - Amazon Web Services},
	url = {https://aws.amazon.com/ecs/},
	abstract = {Amazon Elastic Container Service (Amazon {ECS}) provides a fully managed container service solution that’s easy to use, scalable, secure, and reliable.},
	titleaddon = {Amazon Web Services, Inc.},
	author = {{Amazon, Inc.}},
	urldate = {2022-05-31},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\VSNTU7Q3\\ecs.html:text/html},
}

@online{conventional_commits_conventional_nodate,
	title = {Conventional Commits},
	url = {https://www.conventionalcommits.org/en/v1.0.0/},
	abstract = {A specification for adding human and machine readable meaning to commit messages},
	titleaddon = {Conventional Commits},
	author = {{Conventional Commits}},
	urldate = {2022-05-31},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\U99TXFWG\\v1.0.0.html:text/html},
}

@software{chen_yako_2022,
	title = {Yako},
	url = {https://github.com/JiahuiChen99/Yako},
	abstract = {({WIP} Graduation Thesis B.Sc. {CS}) Heterogeneous Computing Farm - Characterization, Orchestration and Deployment of computing services in heterogeneous environments (Edge and Cloud Computing)},
	author = {Chen, Jiahui},
	urldate = {2022-05-31},
	date = {2022-05-04},
	note = {original-date: 2021-12-27T15:55:42Z},
}

@software{chen_yakoui_2022,
	title = {{YakoUI}},
	url = {https://github.com/JiahuiChen99/YakoUI},
	abstract = {Heterogeneous Computing Farm dashboard},
	author = {Chen, Jiahui},
	urldate = {2022-05-31},
	date = {2022-05-09},
	note = {original-date: 2022-01-29T18:04:19Z},
}

@article{fernandez-alonso_survey_2012,
	title = {Survey of {NoC} and Programming Models Proposals for {MPSoC}},
	volume = {9},
	abstract = {The aim of this paper is to give briefing of the concept of network-on-chip and programming model topics on multiprocessors system-on-chip world, an attractive and relatively new field for academia. Numerous proposals from academia and industry are selected to highlight the evolution of the implementation approaches both on {NoC} proposals and on programming models proposals.},
	journaltitle = {International Journal of Computer Science Issues},
	shortjournal = {International Journal of Computer Science Issues},
	author = {Fernandez-Alonso, Eduard and Castells-Rufas, David and Joven, Jaume and Carrabina, Jordi},
	date = {2012-03-01},
	file = {Full Text PDF:C\:\\Users\\Jiahu\\Zotero\\storage\\TH7R5LMN\\Fernandez-Alonso et al. - 2012 - Survey of NoC and Programming Models Proposals for.pdf:application/pdf},
}

@online{noauthor_build_nodate,
	title = {Build software better, together},
	url = {https://github.com},
	abstract = {{GitHub} is where people build software. More than 83 million people use {GitHub} to discover, fork, and contribute to over 200 million projects.},
	titleaddon = {{GitHub}},
	urldate = {2022-05-31},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\5V56WWVF\\1.html:text/html},
}

@software{chen_yako_2022-1,
	title = {Yako Project},
	url = {https://github.com/users/JiahuiChen99/projects/1},
	abstract = {Yako Project {GitHub} planning},
	author = {Chen, Jiahui},
	urldate = {2022-05-31},
	date = {2022-05-04},
	note = {original-date: 2021-12-27T15:55:42Z},
}

@article{mistretta_microns_nodate,
	title = {Micron’s Automata Processor},
	pages = {28},
	author = {Mistretta, Presented Jared and Gault, Ryan},
	langid = {english},
	file = {Mistretta y Gault - Micron’s Automata Processor.pdf:C\:\\Users\\Jiahu\\Zotero\\storage\\Z7H85EGU\\Mistretta y Gault - Micron’s Automata Processor.pdf:application/pdf},
}

@article{meena_overview_2014,
	title = {Overview of emerging nonvolatile memory technologies},
	volume = {9},
	issn = {1556-276X},
	url = {https://doi.org/10.1186/1556-276X-9-526},
	doi = {10.1186/1556-276X-9-526},
	abstract = {Nonvolatile memory technologies in Si-based electronics date back to the 1990s. Ferroelectric field-effect transistor ({FeFET}) was one of the most promising devices replacing the conventional Flash memory facing physical scaling limitations at those times. A variant of charge storage memory referred to as Flash memory is widely used in consumer electronic products such as cell phones and music players while {NAND} Flash-based solid-state disks ({SSDs}) are increasingly displacing hard disk drives as the primary storage device in laptops, desktops, and even data centers. The integration limit of Flash memories is approaching, and many new types of memory to replace conventional Flash memories have been proposed. Emerging memory technologies promise new memories to store more data at less cost than the expensive-to-build silicon chips used by popular consumer gadgets including digital cameras, cell phones and portable music players. They are being investigated and lead to the future as potential alternatives to existing memories in future computing systems. Emerging nonvolatile memory technologies such as magnetic random-access memory ({MRAM}), spin-transfer torque random-access memory ({STT}-{RAM}), ferroelectric random-access memory ({FeRAM}), phase-change memory ({PCM}), and resistive random-access memory ({RRAM}) combine the speed of static random-access memory ({SRAM}), the density of dynamic random-access memory ({DRAM}), and the nonvolatility of Flash memory and so become very attractive as another possibility for future memory hierarchies. Many other new classes of emerging memory technologies such as transparent and plastic, three-dimensional (3-D), and quantum dot memory technologies have also gained tremendous popularity in recent years. Subsequently, not an exaggeration to say that computer memory could soon earn the ultimate commercial validation for commercial scale-up and production the cheap plastic knockoff. Therefore, this review is devoted to the rapidly developing new class of memory technologies and scaling of scientific procedures based on an investigation of recent progress in advanced Flash memory devices.},
	pages = {526},
	number = {1},
	journaltitle = {Nanoscale Research Letters},
	shortjournal = {Nanoscale Research Letters},
	author = {Meena, Jagan Singh and Sze, Simon Min and Chand, Umesh and Tseng, Tseung-Yuen},
	urldate = {2022-05-31},
	date = {2014-09-25},
	keywords = {Emerging nonvolatile memory technologies, Flash memory technologies, Magnetic storage, Market memory technologies, Memristors, Phase change memories, Random-access storage, Three-dimensional memory, Transparent memory, Unified memory},
	file = {Full Text PDF:C\:\\Users\\Jiahu\\Zotero\\storage\\XWI5WUKT\\Meena et al. - 2014 - Overview of emerging nonvolatile memory technologi.pdf:application/pdf;Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\GDJZK5EK\\1556-276X-9-526.html:text/html},
}

@online{vmware_inc_what_nodate,
	title = {What is a Single Point of Failure? Definition \& {FAQs}},
	url = {https://www-stage.avinetworks.com/glossary/single-point-of-failure/},
	shorttitle = {What is a Single Point of Failure?},
	abstract = {Learn the definition of Single Point of Failure and get answers to {FAQs} regarding: How to eliminate single points of failure, threat protection and load balancer {SPOF} and more.},
	titleaddon = {Avi Networks},
	author = {{VMWare, Inc.}},
	urldate = {2022-05-31},
	langid = {american},
}

@online{openjs_foundation_electron_nodate,
	title = {Electron {\textbar} Build cross-platform desktop apps with {JavaScript}, {HTML}, and {CSS}.},
	url = {https://www.electronjs.org/},
	abstract = {Build cross-platform desktop apps with {JavaScript}, {HTML}, and {CSS}.},
	author = {{OpenJS Foundation}},
	urldate = {2022-05-31},
	langid = {american},
}

@online{vuejs_provide_nodate,
	title = {Provide / Inject {\textbar} Vue.js},
	url = {https://vuejs.org/guide/components/provide-inject.html},
	abstract = {Vue.js - The Progressive {JavaScript} Framework},
	author = {{VueJS}},
	urldate = {2022-05-31},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\AKM28DND\\provide-inject.html:text/html},
}

@online{openapi_initiative_openapi_nodate,
	title = {{OpenAPI}},
	url = {https://www.openapis.org/},
	titleaddon = {{OpenAPI} Initiative},
	author = {{OpenAPI Initiative}},
	urldate = {2022-05-31},
	langid = {american},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\KL2ESB3N\\www.openapis.org.html:text/html},
}

@online{gin_gonic_gin_nodate,
	title = {Gin Web Framework},
	url = {https://gin-gonic.com/},
	abstract = {Gin Web Framework},
	titleaddon = {Gin Web Framework},
	author = {{Gin Gonic}},
	urldate = {2022-05-31},
	langid = {english},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\PZIYBABX\\gin-gonic.com.html:text/html},
}

@online{redhat_que_2020,
	title = {¿Qué es una {API} de {REST}?},
	url = {https://www.redhat.com/es/topics/api/what-is-a-rest-api},
	abstract = {Una {API} de transferencia de estado representacional ({REST}), o {API} de {RESTful}, es una interfaz de programación de aplicaciones que se ajusta a los límites de la arquitectura {REST}.},
	author = {{RedHat}},
	urldate = {2022-05-31},
	date = {2020-05-08},
	langid = {spanish},
	file = {Snapshot:C\:\\Users\\Jiahu\\Zotero\\storage\\Z4Q2XL2B\\what-is-a-rest-api.html:text/html},
}

@online{mackenzie_uname1_nodate,
	title = {uname(1): print system info - Linux man page},
	url = {https://linux.die.net/man/1/uname},
	author = {{MacKenzie}, David},
	urldate = {2022-05-31},
	file = {uname(1)\: print system info - Linux man page:C\:\\Users\\Jiahu\\Zotero\\storage\\6V7BHQME\\uname.html:text/html},
}